// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Projekat.IRC.DataAccessLayer;

#nullable disable

namespace Projekat.IRC.DataAccessLayer.Migrations
{
    [DbContext(typeof(ModelsContext))]
    [Migration("20231224213159_InitialMigration")]
    partial class InitialMigration
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.11")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("Projekat.IRC.Models.Oprema", b =>
                {
                    b.Property<string>("SerijskiBrojOpreme")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("InventarskiBroj")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Naziv")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ProstorijaOznakaSale")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.Property<byte[]>("RowVersion")
                        .IsConcurrencyToken()
                        .IsRequired()
                        .ValueGeneratedOnAddOrUpdate()
                        .HasColumnType("rowversion");

                    b.Property<string>("Specs")
                        .HasMaxLength(42)
                        .HasColumnType("nvarchar(42)");

                    b.Property<string>("Status")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("TipOpremeID")
                        .HasColumnType("int");

                    b.HasKey("SerijskiBrojOpreme");

                    b.HasIndex("ProstorijaOznakaSale");

                    b.HasIndex("TipOpremeID");

                    b.ToTable("Oprema");
                });

            modelBuilder.Entity("Projekat.IRC.Models.Prostorija", b =>
                {
                    b.Property<string>("OznakaSale")
                        .HasColumnType("nvarchar(450)");

                    b.Property<int>("Kapacitet")
                        .HasColumnType("int");

                    b.Property<string>("Sprat")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("OznakaSale");

                    b.ToTable("Prostorija");
                });

            modelBuilder.Entity("Projekat.IRC.Models.TipOpreme", b =>
                {
                    b.Property<int>("TipOpremeID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("TipOpremeID"));

                    b.Property<string>("Naziv")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("TipOpremeID");

                    b.ToTable("TipOpreme");
                });

            modelBuilder.Entity("Projekat.IRC.Models.Zaduzenje", b =>
                {
                    b.Property<DateTime>("DatumZaduzivanja")
                        .HasColumnType("datetime2");

                    b.Property<int>("ZaposleniID")
                        .HasColumnType("int");

                    b.Property<string>("SerijskiBrojOpreme")
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("DatumZaduzivanja", "ZaposleniID", "SerijskiBrojOpreme");

                    b.HasIndex("SerijskiBrojOpreme");

                    b.HasIndex("ZaposleniID");

                    b.ToTable("Zaduzenje");
                });

            modelBuilder.Entity("Projekat.IRC.Models.Zaposleni", b =>
                {
                    b.Property<int>("ZaposleniID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ZaposleniID"));

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("ImePrezime")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Katedra")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ZaposleniID");

                    b.HasIndex("Email")
                        .IsUnique();

                    b.ToTable("Zaposleni");
                });

            modelBuilder.Entity("Projekat.IRC.Models.Oprema", b =>
                {
                    b.HasOne("Projekat.IRC.Models.Prostorija", "Prostorija")
                        .WithMany("Oprema")
                        .HasForeignKey("ProstorijaOznakaSale")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Projekat.IRC.Models.TipOpreme", "TipOpreme")
                        .WithMany("Oprema")
                        .HasForeignKey("TipOpremeID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Prostorija");

                    b.Navigation("TipOpreme");
                });

            modelBuilder.Entity("Projekat.IRC.Models.Zaduzenje", b =>
                {
                    b.HasOne("Projekat.IRC.Models.Oprema", "Oprema")
                        .WithMany("Zaduzenja")
                        .HasForeignKey("SerijskiBrojOpreme")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Projekat.IRC.Models.Zaposleni", "Zaposleni")
                        .WithMany("Zaduzenja")
                        .HasForeignKey("ZaposleniID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Oprema");

                    b.Navigation("Zaposleni");
                });

            modelBuilder.Entity("Projekat.IRC.Models.Oprema", b =>
                {
                    b.Navigation("Zaduzenja");
                });

            modelBuilder.Entity("Projekat.IRC.Models.Prostorija", b =>
                {
                    b.Navigation("Oprema");
                });

            modelBuilder.Entity("Projekat.IRC.Models.TipOpreme", b =>
                {
                    b.Navigation("Oprema");
                });

            modelBuilder.Entity("Projekat.IRC.Models.Zaposleni", b =>
                {
                    b.Navigation("Zaduzenja");
                });
#pragma warning restore 612, 618
        }
    }
}
